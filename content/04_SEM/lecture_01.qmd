---
title: "Introduction to SEM in R"
author: "Duco Veen"
format: 
  revealjs:
    slide-number: true
    smaller: true
    incremental: false
    chalkboard: 
      buttons: true
    preview-links: auto
    logo: logo.jpg
    css: logo.css
    footer: <https://VeenDuco.github.io/NWU_april_2023/>
execute:
  echo: true 
    
---


# From regression to CFA

## prepare and load package to do CFA

```{r, message=TRUE, echo = TRUE}
library(lavaan)
```

## Get data

   - Replace this step with your own data as before 

```{r, message=TRUE, echo = TRUE}
data <- HolzingerSwineford1939
summary(data)
```

## Specify your model
```{r, message=TRUE, echo = TRUE}
model <- '
visual =~ 1 * x1 + x2 + x3
visual ~~ visual
x1 ~ 1
x2 ~ 1
x3 ~ 1
x1 ~~ x1
x2 ~~ x2
x3 ~~ x3
visual ~ 0 
'
```

*note*: We have defined the scale by setting the first factor loading to 1 and the mean of the latent variable to 0.

```{r, eval = TRUE, message = FALSE, echo=FALSE}
library(semPlot)
fit_hidden <- lavaan(model, data = data)
semPaths(fit_hidden)
``` 

## Fit your model

```{r, message=TRUE, echo = TRUE}
fit <- lavaan(model, data = data)
```

## Check your fit object

   - Use summary as before

```{r}
summary(fit)
```

- Alternatively use lavaan function `parameterEstimates`.

## Check your fit object

```{r}
parameterEstimates(fit)
```

## Check your model fit

```{r}
fitMeasures(fit)
```

```{r, eval = TRUE, message = FALSE, echo=FALSE}
library(semPlot)
fit_hidden <- lavaan(model, data = data)
semPaths(fit_hidden, whatLabels = "est")
``` 



# Extending this model

## Specify your model
```{r, message=TRUE, echo = TRUE}
model2 <- '
visual =~ 1 * x1 + x2 + x3 + x4
visual ~~ visual
x1 ~ 1
x2 ~ 1
x3 ~ 1
x4 ~ 1
x1 ~~ x1
x2 ~~ x2
x3 ~~ x3
x4 ~~ x4
visual ~ 0 
'
```

*note*: We have defined the scale by setting the first factor loading to 1 and the mean of the latent variable to 0.

```{r, eval = TRUE, message = FALSE, echo=FALSE}
library(semPlot)
fit_hidden2 <- lavaan(model2, data = data)
semPaths(fit_hidden2)
``` 

## Fit your model

```{r, message=TRUE, echo = TRUE}
fit2 <- lavaan(model2, data = data)
```

## Check your fit object

   - Use summary as before

```{r}
summary(fit2)
```

## Check your fit object

```{r}
parameterEstimates(fit2)
```

## Check your model fit

```{r}
fitMeasures(fit2)
```

```{r, eval = TRUE, message = FALSE, echo=FALSE}
fit_hidden2 <- lavaan(model2, data = data)
semPaths(fit_hidden2, whatLabels = "est")
``` 


# Or add another factor

## Specify your model
```{r, message=TRUE, echo = TRUE}
model3 <- '
visual =~ 1 * x1 + x2 + x3
textual =~ 1 * x4 + x5 + x6
visual ~~ visual
textual ~~ textual
visual ~~ textual
x1 ~ 1
x2 ~ 1
x3 ~ 1
x4 ~ 1
x5 ~ 1
x6 ~ 1
x1 ~~ x1
x2 ~~ x2
x3 ~~ x3
x4 ~~ x4
x5 ~~ x5
x6 ~~ x6
visual ~ 0
textual ~ 0
'
```

*note*: We have defined the scale by setting the first factor loading to 1 and the mean of the latent variable to 0.

```{r, eval = TRUE, message = FALSE, echo=FALSE}
library(semPlot)
fit_hidden3 <- lavaan(model3, data = data)
semPaths(fit_hidden3)
``` 

## Fit your model

```{r, message=TRUE, echo = TRUE}
fit3 <- lavaan(model3, data = data)
```

## Check your fit object

   - Use summary as before

```{r}
summary(fit3)
```

## Check your fit object

```{r}
parameterEstimates(fit3)
```

## Check your model fit

```{r}
fitMeasures(fit3)
```

## Check your model fit

```{r, eval = TRUE, message = FALSE, echo=FALSE}
fit_hidden3 <- lavaan(model3, data = data)
semPaths(fit_hidden3, whatLabels = "est")
``` 

